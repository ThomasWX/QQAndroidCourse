第十一节：面向对象式 数据库架构设计
db.framework

知识点：
泛型
注解
反射
数据库语句拼接

单例模式
简单工厂模式
模板方法模式

主要思路：将对象 -> ContentValues ，key是表的字段名，value是值，这样即可直接存入数据库。
步骤：
1，将表名与对象进行映射，字段名与对象成员变量进行映射。




------

注解：
    定义：注解就是用作标记，提供信息者
    写法：以 @interface 开头
    作用范围： @Target(ElementType.FIELD) 作用在属性上；
            ElementType.TYPE 作用在类名上；
            ElementType.METHOD:  作用在方法上；
            ElementType.ANNOTATION_TYPE:  作用在注解上；

            @Retention(RetentionPolicy.SOURCE): 表示在编译时有效


第十二节：数据库升级
db.upgrade

一个模块做的好与坏  将包拿出来，不对其它包产生依赖，以业务逻辑进行分包，拿到其他项目可以直接用


第十三节：网络访问框架

如何设计：
    需求：支持请求：JSON 文本类型、音频、图片类型、批量下载、上传；
        请求各种数据时，调用层不关心上传参数封装，如request.addParams(key value),直接将参数封装为对象传给框架。
        获取数据后，调用层不关心JSON数据解析，回调时，调用层只需要知道传入的JSON的对应响应类。
        回调响应结果发生在主线程(线程切换)
        对下载，上传扩展
        支持高并发请求，请求队列依次获取，可以设置最大并发数，设置先请求先执行

用到的知识点：泛型、请求队列、阻塞队列、线程池拒绝策略
用到的设计模式：模板方法模式、单例模式、策略模式、生产者消费者模式
